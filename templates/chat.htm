<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script type="text/javascript">
      $(document).ready(function () {
        $("#chat").keyup(function (event) {
          if (event.keyCode === 13) {
            $("#enter_chat").click();
          }
        });
      });
      var lastMessageTimeStamp = Date.now();

      function sendData() {
        var chat_term = $("#chat").val();
        var email = $("#email").text();
        console.log(email);

        x = Date.now();
        lastMessageTimeStamp = x;
        // console.log(x);
        // console.log(chat_term);
        var s = {
          sender_id: email,
          message: chat_term,
          timestamp: x,
        };

        const url =
          "https://us-central1-serverless-project-284322.cloudfunctions.net/pub-sub-publisher/";
        const requestOptions = {
          cache: "no-cache",
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(s),
        };

        fetch(url, requestOptions)
          .then((response) => {
            return response.json();
          })
          .then((data) => console.log(data));
      }

      document.addEventListener("DOMContentLoaded", function (e) {
        setInterval(recv, 2500);
      });

      function recv() {
        //   console.log("Sharan Sudhir");
        const url =
          "https://us-central1-serverless-project-284322.cloudfunctions.net/get_chat_data/";
        const requestOptions = {
          cache: "no-cache",
          method: "GET",
          headers: { "Content-Type": "application/json" },
        };

        fetch(url)
          .then((response) => {
            return response.json();
          })
          .then((data) => {
            if (data == "") {
              console.log("Empty");
            } else {
              var obj = JSON.parse(data);
              len = obj.length;

              message = obj;
              // console.log(message);

              for (var i = 0; i < len; i++) {
                console.log(message[i]);
                var lastMessage;
                console.log(lastMessageTimeStamp);
                flag = false;
                if (lastMessageTimeStamp < message[i].timestamp) {
                  console.log(message[i]);
                  insertChat(
                    "you",
                    message[i].message,
                    undefined,
                    message[i].sender_id
                  );
                  lastMessage = message[i].timestamp;
                  flag = true;
                }
              }
              if (flag) {
                lastMessageTimeStamp = lastMessage;
              }
            }
          }); //output to web browser console
      }

      function formatAMPM(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? "PM" : "AM";
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? "0" + minutes : minutes;
        var strTime = hours + ":" + minutes + " " + ampm;
        return strTime;
      }

      //-- No use time. It is a javaScript effect.
      function insertChat(who, text, time, name) {
        if (time === undefined) {
          time = 0;
        }
        var control = "";
        var date = formatAMPM(new Date());

        if (who == "me") {
          control =
            '<li style="width:100%">' +
            '<div class="msj macro">' +
            '<div class="text text-l">' +
            "<p>" +
            name +
            "</p>" +
            "<p>" +
            text +
            "</p>" +
            "<p><small>" +
            date +
            "</small></p>" +
            "</div>" +
            "</div>" +
            "</li>";
        } else {
          control =
            '<li style="width:100%;">' +
            '<div class="msj-rta macro">' +
            '<div class="text text-r">' +
            "<p>" +
            name +
            "</p>" +
            "<p>" +
            text +
            "</p>" +
            "<p><small>" +
            date +
            "</small></p>" +
            "</div>" +
            "</li>";
        }
        setTimeout(function () {
          $("ul").append(control).scrollTop($("ul").prop("scrollHeight"));
        }, time);
      }

      function resetChat() {
        $("ul").empty();
      }

      $(".mytext").on("keydown", function (e) {
        if (e.which == 13) {
          var text = $(this).val();
          if (text !== "") {
            insertChat("me", text);
            $(this).val("");
          }
        }
      });

      $("body > div > div > div:nth-child(2) > span").click(function () {
        $(".mytext").trigger({ type: "keydown", which: 13, keyCode: 13 });
      });

      //-- Clear Chat
      resetChat();

      //-- Print Messages

      // insertChat("me", "What would you like to talk about today?", 3500);
      // insertChat("you", "Tell me a joke",7000);
      // insertChat("me", "Spaceman: Computer! Computer! Do we bring battery?!", 9500);
      // insertChat("you", "LOL", 12000);

      //-- NOTE: No use time on insertChat.

      $(document).ready(function () {
        $("#enter_chat").click(function () {
          var chat_term = $("#chat").val();
          var email = $("#email").text();
          insertChat("me", chat_term, 0, email);
          // insertChat("you", "Hi, Pablo", 1500);
        });
      });
    </script>
    <link
      href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css"
      rel="stylesheet"
      id="bootstrap-css"
    />
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" type="text/css" href="./styles.css" />
    <title>Chat Module</title>
  </head>
  <style>
    body {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
    }
    .col-sm-3 {
      /* border: solid 2px black; */
      margin-top: 10%;
      width: 40%;
      /* height: 100vh; */
    }
    .mytext {
      border: 0;
      padding: 10px;
      background: whitesmoke;
    }
    .text {
      width: 75%;
      display: flex;
      flex-direction: column;
    }
    .text > p:first-of-type {
      width: 100%;
      margin-top: 0;
      margin-bottom: auto;
      line-height: 13px;
      font-size: 12px;
    }
    .text > p:last-of-type {
      width: 100%;
      text-align: right;
      color: silver;
      margin-bottom: -7px;
      margin-top: auto;
    }
    .text-l {
      float: left;
      padding-right: 10px;
    }
    .text-r {
      float: right;
      padding-left: 10px;
    }
    .avatar {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 25%;
      float: left;
      padding-right: 10px;
    }
    .macro {
      margin-top: 5px;
      width: 85%;
      border-radius: 5px;
      padding: 5px;
      display: flex;
    }
    .msj-rta {
      float: right;
      background: whitesmoke;
    }
    .msj {
      float: left;
      background: white;
    }
    .frame {
      background: #e0e0de;
      height: 450px;
      overflow: hidden;
      padding: 0;
    }
    .frame > div:last-of-type {
      position: absolute;
      bottom: 0;
      width: 100%;
      display: flex;
    }
    body > div > div > div:nth-child(2) > span {
      background: whitesmoke;
      padding: 10px;
      font-size: 21px;
      border-radius: 50%;
    }
    body > div > div > div.msj-rta.macro {
      margin: auto;
      margin-left: 1%;
    }
    ul {
      width: 100%;
      list-style-type: none;
      padding: 18px;
      position: absolute;
      bottom: 47px;
      display: flex;
      flex-direction: column;
      top: 0;
      overflow-y: scroll;
    }
    .msj:before {
      width: 0;
      height: 0;
      content: "";
      top: -5px;
      left: -14px;
      position: relative;
      border-style: solid;
      border-width: 0 13px 13px 0;
      border-color: transparent #ffffff transparent transparent;
    }
    .msj-rta:after {
      width: 0;
      height: 0;
      content: "";
      top: -5px;
      left: 14px;
      position: relative;
      border-style: solid;
      border-width: 13px 13px 0 0;
      border-color: whitesmoke transparent transparent transparent;
    }
    input:focus {
      outline: none;
    }
    ::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      color: #d4d4d4;
    }
    ::-moz-placeholder {
      /* Firefox 19+ */
      color: #d4d4d4;
    }
    :-ms-input-placeholder {
      /* IE 10+ */
      color: #d4d4d4;
    }
    :-moz-placeholder {
      /* Firefox 18- */
      color: #d4d4d4;
    }
  </style>
  <body>
    <!-- <label>Enter Chat</label> -->
    <!-- <input type="text" id="chat" /> -->
    <!-- <button id="enter_chat">Enter Chat</button> -->
    <!-- <button id="rec">Receive Data</button> -->
    <div class="chat-container">
      <p id="email">{{email}}</p>
      <div class="col-sm-3 col-sm-offset-4 frame">
        <ul></ul>
        <div>
          <div class="msj-rta macro">
            <div class="text text-r" style="background: whitesmoke !important;">
              <input class="mytext" placeholder="Type a message" id="chat" />
            </div>
          </div>

          <div style="padding: 10px;">
            <!-- <span class="glyphicon glyphicon-share-alt"></span> -->
            <button id="enter_chat" onclick="sendData()">Enter Chat</button>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
